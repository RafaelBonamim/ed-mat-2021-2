/*

        _..._            ★ ° . *　　　°　.　°☆ 　. * ● ¸ .　 * 　.　 　★     ° :.☆
      .'     '.      _   . 　　　★ 　° :. ★　 * • ○ ° ★　 . 　　　★ 　° :. 　 * • ○ ° ★　 
     /    .-""-\   _/ \  .　 * 　.　 　　　　　. 　 ★ ° . *　　　°　.　°☆ 　. * ● ¸ 
   .-|   /:.   |  |   |  ° 　. ● . ★ ° . *　　　°　.　°☆ ° . *　　　°　.　°☆ 　. * ● ¸ . 
   |  \  |:.   /.-'-./   　. * ● ¸ . 　　　★ 　° :●. 　 * ° °☆ 　¸. ● . 　　★　★ 
   | .-'-;:__.'    =/    • ○ ° ★　 .　 * 　.　 　　　　　.　★　　　　. 　 ° 　.  . 　    ★　 　　
   .'=  *=|     _.='      　 ° 　. ● . ★ ° . *　　　°　.　° :. 　 * • ○ ° ★　 .　 * 　.　 
  /   _.  |    ;       °☆ 　. * ● ¸ . 　　　★ 　°☆ 　. * ● ¸ . 　　　★ 　
 ;-.-'|    \   |      ° :. 　 * • ○ ° ★　 .　 * 　.　  　 ° 　. ● . ★ ° . *　　　°　.　
/   | \    _\  _\     　★　　　　. 　 ° 　.  . 　    ★　 　　• ○ ° ★　 .　 * 　.　 　　　　　.
\__/'._;.  ==' ==\    ° °☆ 　¸. ● . 　　★　★ 　. * ● ¸ . 　　　★ 　° :●. 　 * 
         \    \   |   ° . *　　　°　.　°☆ 　. * ● ¸ . ° 　. ● . ★ ° . *　　　°　.　°☆ 
         /    /   /   ★ ° . *　　　°　.　°☆ 　. * ● ¸ .　 * 　.　 　　　　　. 　 
         /-._/-._/   . 　　　★ 　° :. 　 * • ○ ° ★　 . 　　　★ 　° :. ★　 * • ○ ° ★　 
         \   `\  \  .　 * 　.　 　★     ° :.☆★ ° . *　　　°　.　°☆ 　. * ● ¸ 
          `-._/._/  

              .........                     ╔═══╗╔═══╗╔════╗╔═══╗╔╗─╔╗╔════╗╔╗─╔╗╔═══╗╔═══╗
            .'------.' |                    ║╔══╝║╔═╗║║╔╗╔╗║║╔═╗║║║─║║║╔╗╔╗║║║─║║║╔═╗║║╔═╗║
           | .-----. | |                    ║╚══╗║╚══╗╚╝║║╚╝║╚═╝║║║─║║╚╝║║╚╝║║─║║║╚═╝║║║─║║
           | |     | | |                    ║╔══╝╚══╗║──║║──║╔╗╔╝║║─║║──║║──║║─║║║╔╗╔╝║╚═╝║
         __| |     | | |;. _______________  ║╚══╗║╚═╝║──║║──║║║╚╗║╚═╝║──║║──║╚═╝║║║║╚╗║╔═╗║
        /  |*`-----'.|.' `;              // ╚═══╝╚═══╝──╚╝──╚╝╚═╝╚═══╝──╚╝──╚═══╝╚╝╚═╝╚╝─╚╝
       /   `---------' .;'              //      ╔═══╗╔═══╗     ╔═══╗╔═══╗╔═══╗╔═══╗╔═══╗
 /|   /  .''''////////;'               //       ╚╗╔╗║║╔══╝     ╚╗╔╗║║╔═╗║╚╗╔╗║║╔═╗║║╔═╗║
|=|  .../ ######### /;/               //|       ─║║║║║╚══╗     ─║║║║║║─║║─║║║║║║─║║║╚══╗
|/  /  / ######### //                //||       ─║║║║║╔══╝     ─║║║║║╚═╝║─║║║║║║─║║╚══╗║
   /   `-----------'                // ||       ╔╝╚╝║║╚══╗     ╔╝╚╝║║╔═╗║╔╝╚╝║║╚═╝║║╚═╝║
  /________________________________//| ||       ╚═══╝╚═══╝     ╚═══╝╚╝─╚╝╚═══╝╚═══╝╚═══╝
  `--------------------------------' | ||   
   : | ||      | || |__LL__|| ||     | ||     █▀█ █▀█ █▀█ █▀▀ ░   █▀▀ ▄▀█ █░█ █▀ ▀█▀ █▀█
   : | ||      | ||         | ||     `""'     █▀▀ █▀▄ █▄█ █▀░ ▄   █▀░ █▀█ █▄█ ▄█ ░█░ █▄█
   n | ||      `""'         | ||              
   M | ||                   | ||                       █▀▀ █ █▄░█ ▀█▀ █▀█ ▄▀█
     | ||                   | ||                       █▄▄ █ █░▀█ ░█░ █▀▄ █▀█
     `""'                   `""'
*/

/**
 *         𝕆𝕡𝕖𝕣𝕒𝕕𝕠𝕣𝕖𝕤 
 *       𝕕𝕖 ℂ𝕠𝕞𝕡𝕒𝕣𝕒𝕔̧𝕒̃𝕠    Operador | Significado
 *       ---------------   ---------+----------------------
 * === |(igualdade)      |     <    | Menor que
 ______| --------------- | ---------+----------------------
 * !=  |(desiguldade)    |     >    | Maior que 
_______| --------------- | ---------+----------------------
 * >   |(maior que)      |    <=    | Menor ou igual que
_______| --------------- | ---------+----------------------
 * >=  |(maior ou igual) |    >=    | Maior ou igual que
_______| --------------- | ---------+----------------------
 * <   |(menor)          |    ==    | Igual ao 
_______| --------------- | ---------+----------------------
 * <=  |(menor ou igual) |    !=    | Diferente de
_______|_________________| 

 */

// Cᴏᴍᴘᴀʀᴀɴᴅᴏ Nᴜ́ᴍᴇʀᴏs
let a = 10, b = 8, c = 10

console.log(a > b)
// 10 > 8 = true
// Maior que (>)
// Retorna verdadeiro caso o operando 
// da esquerda seja maior que o da direita.
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(a < b)
// 10 < 8 = false
// Menor que (<)
// Retorna verdadeiro caso o operando 
// da esquerda seja menor que o da direita.
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(a === b)
/*
// 10 = 8 = false
 */
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌


console.log(a != b)
// 10 != 8 = true
// diferente
// Retorna verdadeiro caso os operandos 
// não sejam iguais.	
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(a === c)
// 10 === 10 = true
// igual
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(a != c)
// 10 != 10 = false
// diferente
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log('=^..^=   =^..^=   =^..^=    =^..^=    =^..^=    =^..^=    =^..^= ')



// Cᴏᴍᴘᴀʀᴀɴᴅᴏ Sᴛʀɪɴɢs
// são comparados os valores numéricos
// estabelecidos pela tabela ASCII

let nome1 = "Catifunda", nome2 = "Felisbino", nome3 = "Ágatha"

console.log(nome1 > nome2)
// Catifundia > Felisbino = false
// maior que
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(nome1 < nome2)
// Catifundia < Felisbino = true
// menor que
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(nome1 === nome2)
// Catifundia === Felisbino = false
// igualdade
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(nome1 > nome3)
// Catifundia > Ágatha = false
// maior que
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(nome1 < nome3)
// Catifundia < Ágatha = true
// menor que
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(nome1 === nome3)
// Catifundia = Ágatha = false
// igualdade
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log('=^..^=   =^..^=   =^..^=    =^..^=    =^..^=    =^..^=    =^..^= ')



// Cᴏᴍᴘᴀʀᴀɴᴅᴏ Bᴏᴏʟᴇᴀɴᴏs
let x = true, y = false, z = true

console.log(x > y)
// 1 > 0 =
// maior que
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(x < y)
// 1 < 0 = 
// menor que
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(x === y)
// 1 === 0 =
// igualdade
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(x !== z)
// 1 !== 1 =
// diferente
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(x === z)
// 1 === 1 =
// igualdade
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(x !== z)
// 1 !== 1 =
// diferente
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log('=^..^=   =^..^=   =^..^=    =^..^=    =^..^=    =^..^=    =^..^= ')



// Diferença entre usar == e ===
// == : verdadeiro se o conteúdo for igual, mesmo se os tipos forem diferentes

let i = 56, j = '56'

console.log(i == j)
// igualdade
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(i === j)
// igualdade
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

// Igualdade estrita usando ===
// Para todos os valores, exceto os números,
// ele usa a semântica óbvia: um valor é 
// apenas igual a ele mesmo.

// Para os números que ele usa uma semântica
// ligeiramente diferente para encobrir dois 
// casos extremamente diferentes.

// A primeira é que o zero de ponto flutuante 
// é positiva ou negativamente assinada. 
// Isso é útil em representar certas soluções 
// matemáticas, mas como a maioria das situações 
// não se preocupam com a diferença entre +0 e -0,
// igualdade estrita trata-os como o mesmo valor. 

// A segunda é que ponto flutuante inclui 
// o conceito de um valor não-numérico, NaN, 
// para representar a solução para certos 
// problemas matemáticos mal definidos: 
// infinito negativo adicionado ao infinito 
// positivo, por exemplo. Igualdade estrita 
// trata NaN como desigual a qualquer outro 
// valor - incluindo o próprio. (O único 
// caso em que (x! == X) é true é quando 
// x é NaN.)

console.log('=^..^=   =^..^=   =^..^=    =^..^=    =^..^=    =^..^=    =^..^= ')

/*
 
░█████╗░░█████╗░███╗░░░███╗██████╗░░█████╗░██████╗░░█████╗░░█████╗░░█████╗░███████╗░██████╗
██╔══██╗██╔══██╗████╗░████║██╔══██╗██╔══██╗██╔══██╗██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔════╝
██║░░╚═╝██║░░██║██╔████╔██║██████╔╝███████║██████╔╝███████║██║░░╚═╝██║░░██║█████╗░░╚█████╗░
██║░░██╗██║░░██║██║╚██╔╝██║██╔═══╝░██╔══██║██╔══██╗██╔══██║██║░░██╗██║░░██║██╔══╝░░░╚═══██╗
╚█████╔╝╚█████╔╝██║░╚═╝░██║██║░░░░░██║░░██║██║░░██║██║░░██║╚█████╔╝╚█████╔╝███████╗██████╔╝
░╚════╝░░╚════╝░╚═╝░░░░░╚═╝╚═╝░░░░░╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░░╚════╝░╚══════╝╚═════╝░

██╗███╗░░██╗░█████╗░░█████╗░███╗░░██╗░██████╗██╗░██████╗████████╗███████╗███╗░░██╗████████╗███████╗░██████╗
██║████╗░██║██╔══██╗██╔══██╗████╗░██║██╔════╝██║██╔════╝╚══██╔══╝██╔════╝████╗░██║╚══██╔══╝██╔════╝██╔════╝
██║██╔██╗██║██║░░╚═╝██║░░██║██╔██╗██║╚█████╗░██║╚█████╗░░░░██║░░░█████╗░░██╔██╗██║░░░██║░░░█████╗░░╚█████╗░
██║██║╚████║██║░░██╗██║░░██║██║╚████║░╚═══██╗██║░╚═══██╗░░░██║░░░██╔══╝░░██║╚████║░░░██║░░░██╔══╝░░░╚═══██╗
██║██║░╚███║╚█████╔╝╚█████╔╝██║░╚███║██████╔╝██║██████╔╝░░░██║░░░███████╗██║░╚███║░░░██║░░░███████╗██████╔╝
╚═╝╚═╝░░╚══╝░╚════╝░░╚════╝░╚═╝░░╚══╝╚═════╝░╚═╝╚═════╝░░░░╚═╝░░░╚══════╝╚═╝░░╚══╝░░░╚═╝░░░╚══════╝╚═════╝░
 */

// Cᴏᴍᴘᴀʀᴀɴᴅᴏ Vᴇᴛᴏʀᴇs
let v1 = [10, 20, 30, 40, 50]
let v2 = [-3, -2, -1, 0]
let v3 = [10, 20, 30, 40, 50]

console.log(v1 > v2)
// true
// maior que
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(v1 < v2)
// false
// menor que
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(v1 === v2)
// false
// igualdade
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(v1 !== v2)
// true
// diferente
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(v1 === v3)
// false
// igualdade
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log(v1 !== v3)
// true
// diferente
// ║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌║▌█║▌║█║▌│║▌

console.log('=^..^=   =^..^=   =^..^=    =^..^=    =^..^=    =^..^=    =^..^= ')



// Cᴏᴍᴘᴀʀᴀɴᴅᴏ Oʙᴊᴇᴛᴏs

a = { marca: 'Volkswagen', modelo: 'Fusca', ano: 1976 }

b = { marca: 'Fiat', modelo: '147', ano: 1980 }

c = { marca: 'Volkswagen', modelo: 'Fusca', ano: 1976 }

console.log(a > b)
console.log(a < b)
console.log(a == c)
console.log(a != c)

// CONCLUSÃO GERAL:
// Tipos de dados que são comparáveis em JS:
/* 
▒█▄░▒█ █░░█ █▀▄▀█ █▀▀▄ █▀▀ █▀▀█ 
▒█▒█▒█ █░░█ █░▀░█ █▀▀▄ █▀▀ █▄▄▀ 
▒█░░▀█ ░▀▀▀ ▀░░░▀ ▀▀▀░ ▀▀▀ ▀░▀▀

▒█▀▀▀█ ▀▀█▀▀ █▀▀█ ░▀░ █▀▀▄ █▀▀▀ 
░▀▀▀▄▄ ░░█░░ █▄▄▀ ▀█▀ █░░█ █░▀█ 
▒█▄▄▄█ ░░▀░░ ▀░▀▀ ▀▀▀ ▀░░▀ ▀▀▀▀

▒█▀▀█ █▀▀█ █▀▀█ █░░ █▀▀ █▀▀█ █▀▀▄ 
▒█▀▀▄ █░░█ █░░█ █░░ █▀▀ █▄▄█ █░░█ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀▀▀ ▀▀▀ ▀░░▀ ▀░░▀
 */